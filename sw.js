!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=3)}([function(e,t,n){"use strict";try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}},function(e,t,n){"use strict";try{self["workbox:core:5.1.4"]&&_()}catch(e){}},function(e,t){function n(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=2},function(e,t,n){"use strict";n.r(t);n(0);n(1);const s={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[s.prefix,e,s.suffix].filter((e=>e&&e.length>0)).join("-"),a=e=>e||r(s.precache),c=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class o extends Error{constructor(e,t){super(c(e,t)),this.name=e,this.details=t}}const i=new Set;const l=(e,t)=>e.filter((e=>t in e)),h=async({request:e,mode:t,plugins:n=[]})=>{const s=l(n,"cacheKeyWillBeUsed");let r=e;for(const e of s)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},u=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:r=[]})=>{const a=await self.caches.open(e),c=await h({plugins:r,request:t,mode:"read"});let o=await a.match(c,s);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;o=await r.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:o,request:c})}return o},f=async({cacheName:e,request:t,response:n,event:s,plugins:r=[],matchOptions:a})=>{const c=await h({plugins:r,request:t,mode:"write"});if(!n)throw new o("cache-put-with-no-response",{url:(f=c.url,new URL(String(f),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var f;const d=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let r=t,a=!1;for(const t of s)if("cacheWillUpdate"in t){a=!0;const s=t.cacheWillUpdate;if(r=await s.call(t,{request:e,response:r,event:n}),!r)break}return a||(r=r&&200===r.status?r:void 0),r||null})({event:s,plugins:r,response:n,request:c});if(!d)return void 0;const p=await self.caches.open(e),y=l(r,"cacheDidUpdate"),w=y.length>0?await u({cacheName:e,matchOptions:a,request:c}):null;try{await p.put(c,d)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of i)await e()}(),e}for(const t of y)await t.cacheDidUpdate.call(t,{cacheName:e,event:s,oldResponse:w,newResponse:d,request:c})},d=async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const r=l(s,"fetchDidFail"),a=r.length>0?e.clone():null;try{for(const t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new o("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let r;r="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(r=await e.fetchDidSucceed.call(e,{event:n,request:c,response:r}));return r}catch(e){0;for(const t of r)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:c.clone()});throw e}};let p;async function y(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=t?t(s):s,a=function(){if(void 0===p){const e=new Response("");if("body"in e)try{new Response(e.body),p=!0}catch(e){p=!1}p=!1}return p}()?n.body:await n.blob();return new Response(a,r)}function w(e){if(!e)throw new o("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new o("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),r=new URL(n,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:r.href}}class g{constructor(e){this._cacheName=a(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=w(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new o("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new o("add-to-cache-list-conflicting-integrities",{url:s});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,r),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],r=await self.caches.open(this._cacheName),a=await r.keys(),c=new Set(a.map((e=>e.url)));for(const[e,t]of this._urlsToCacheKeys)c.has(t)?s.push(e):n.push({cacheKey:t,url:e});const o=n.map((({cacheKey:n,url:s})=>{const r=this._cacheKeysToIntegrities.get(n),a=this._urlsToCacheModes.get(s);return this._addURLToCache({cacheKey:n,cacheMode:a,event:e,integrity:r,plugins:t,url:s})}));await Promise.all(o);return{updatedURLs:n.map((e=>e.url)),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),n=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)n.has(r.url)||(await e.delete(r),s.push(r.url));return{deletedURLs:s}}async _addURLToCache({cacheKey:e,url:t,cacheMode:n,event:s,plugins:r,integrity:a}){const c=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});let i,l=await d({event:s,plugins:r,request:c});for(const e of r||[])"cacheWillUpdate"in e&&(i=e);if(!(i?await i.cacheWillUpdate({event:s,request:c,response:l}):l.status<400))throw new o("bad-precaching-response",{url:t,status:l.status});l.redirected&&(l=await y(l)),await f({event:s,plugins:r,response:l,request:e===t?c:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this._cacheName)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new o("missing-precache-entry",{cacheName:this._cacheName,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new o("non-precached-url",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"d5739df8456c28aa51f493705ebcbb00","url":"01a85c17.48d5b7d3.js"},{"revision":"375de945a5f32db80da1f274083a6119","url":"031793e1.f54199f3.js"},{"revision":"d6410ea17110edea5b0f43fa34f5345e","url":"0e7f9ac9.7c041bf6.js"},{"revision":"00164645750155bea21ba384175dd063","url":"0e91159d.7d26ae88.js"},{"revision":"db9f804f08509f7f8ebab0805a9a671b","url":"1.db0aa1a0.js"},{"revision":"a2365a43cf26e14b31750092c48b8826","url":"17896441.bdb3259c.js"},{"revision":"6b338e75c85c5548c143146e78dc0f9c","url":"2.a67ce2a6.js"},{"revision":"24bc7c24d8ed8b3d0cf3e82e3938618e","url":"26eb1e31.80524ac3.js"},{"revision":"d598198ec45eaa00cb483eb0e51bc328","url":"2868cdab.3c3a6600.js"},{"revision":"af17ae16aeb0fb9790f3356c9d813228","url":"2b785902.6c4ec66d.js"},{"revision":"d9cc80d98412107a1e565c78fbbd1dd0","url":"3.8753e7be.js"},{"revision":"bf8fca7ebd79bf6f240ddfcd408f18d0","url":"30a24c52.6393b656.js"},{"revision":"da85bfaa90d92d67d964e5b7dfec49ed","url":"33.c6ad8efd.js"},{"revision":"d74f0fb03b3a0089cdd1065764b4ab6a","url":"34.d0777aa6.js"},{"revision":"9eb9b50b73f7ef2a3d1107061ad89f55","url":"3444e578.ea923e15.js"},{"revision":"ae54a3ec28089a59bab892eff0fad655","url":"35.24776da6.js"},{"revision":"1352b7e96b4e6cc6e43d1f919ace11bf","url":"36.6977f022.js"},{"revision":"e9ede25910799ce20da71175e6fff10f","url":"37.75978509.js"},{"revision":"8e5ec4a1055df8746151f176d5010b0d","url":"404.html"},{"revision":"f7ce8fea28a3815aeca6e4245b542332","url":"54a2e6d8.ac988074.js"},{"revision":"35187fd5c757921a09db1b344502e5ab","url":"5ed3387d.cd4e7d72.js"},{"revision":"7a2c6fcc314680feea4dc53fc1edf9c5","url":"6875c492.8a43a2a1.js"},{"revision":"0e6f80923eb3d9dacf4297ff67de053a","url":"69730b43.ffd90ffb.js"},{"revision":"871e18459a1a2673b147405da00ecd98","url":"935f2afb.915f02a4.js"},{"revision":"d7785202ca36843a50b0fad244c8bf4d","url":"a09c2993.a2843ead.js"},{"revision":"7eccd5a28ba7c035f88ac19799164584","url":"a6aa9e1f.e0c78125.js"},{"revision":"d1be447dcfce74796aeb09dfde062f5a","url":"a7023ddc.e58a909d.js"},{"revision":"0762036b792392bb868e2f9bae7aad44","url":"a80da1cf.42254c66.js"},{"revision":"66721de748661d90a28dcbf666808302","url":"a9bc01a8.aad29344.js"},{"revision":"15afb2d26072d771843c08236b8e5b96","url":"af172acd.f6752837.js"},{"revision":"9394e6f14707c0d7a443f791306bca07","url":"af6ab693.bb82a6f7.js"},{"revision":"7d61ed59b5c790af26f8d57f956ff05b","url":"b2b675dd.0cf93771.js"},{"revision":"d008040a835f494e715e15f7cf33f15f","url":"blog/index.html"},{"revision":"0cb3626221156189425c0ca8233b0295","url":"blog/tags/docusaurus/index.html"},{"revision":"7e5e32227ccefa6c58cf3fa7d5682f3e","url":"blog/tags/facebook/index.html"},{"revision":"43cb73659b1dd072ccdc3966d4e6ef36","url":"blog/tags/hello/index.html"},{"revision":"00af9bfb300d38295b16462775212211","url":"blog/tags/index.html"},{"revision":"6959dc24330b00cfb66d5236de78df1f","url":"blog/welcome/index.html"},{"revision":"48fe7e8b99ca3d980d3713973a27aced","url":"c4f5d8e4.db79fb33.js"},{"revision":"0a8620827d838082ccccea402f47e61b","url":"ca7f1ee8.2e14557c.js"},{"revision":"d713b98a351001bf00cf549633346af4","url":"ccc49370.e6f14998.js"},{"revision":"6839863365fe02864673fcbf6c2bb122","url":"d8519f58.995d1b89.js"},{"revision":"ce5755f629024d9ad55ac2f171dd7803","url":"docs/autorization/index.html"},{"revision":"bbdbedb99c4a5ca19cd44a52d823d8ae","url":"docs/baja/index.html"},{"revision":"01ee7e814f37f549087bb999e598ae41","url":"docs/basic/index.html"},{"revision":"3215ce396a9ec3f82b62bc62526d9cb2","url":"docs/factura/index.html"},{"revision":"c40af1d87c4ce280d8d27ea780f4697f","url":"docs/index.html"},{"revision":"0c65f665693f534547d17d496c1e1847","url":"docs/obligaciones/index.html"},{"revision":"6c45c307f7f56541c4cf0260ff332f84","url":"docs/requirements/index.html"},{"revision":"4e2a00568c65ea70746ea8e2706b05a6","url":"docs/resumen_diario/index.html"},{"revision":"a4d3702fd98d5b2418c3ae93ce29a281","url":"docs/sign/index.html"},{"revision":"9507554232a47ed11f03d4437b124fb3","url":"docs/tools/index.html"},{"revision":"e437507fca1a6a3c3dcb072373a4381b","url":"docs/validation/index.html"},{"revision":"6be09e7c2b11946456020bb5999d2c48","url":"docs/webservices/index.html"},{"revision":"6070df4e8403016e6701832dd8d2b77e","url":"index.html"},{"revision":"b1de9c378ea5572e2d79cd68e30b54cd","url":"main.c6c6d18e.js"},{"revision":"d76d07c48fe607fd9867f44d02f2a5dd","url":"manifest.json"},{"revision":"ab4710e01384da53ca6bbeeb8665c5d6","url":"runtime~main.a44f4542.js"},{"revision":"479c0c78598ca4191b14286494319004","url":"styles.0d349fd8.css"},{"revision":"b5bb3cfe386e17eabbb157080cfd3405","url":"styles.73153a6c.js"},{"revision":"c3f530a7b0447149000c6f98bf5f24e2","url":"img/banner-fe-primer.png"},{"revision":"6caaf73e457b49299d398d441021e8f3","url":"img/company.svg"},{"revision":"35176e03671367163c64758423b0eabb","url":"img/developer.svg"},{"revision":"f0d2c327d387a465a0b972fa8a6ae0a1","url":"img/favicon.ico"},{"revision":"0492e765dac7d4a244b74c350457c40b","url":"img/fe-primer.png"},{"revision":"191346bfb910276dc8ba77fde1d0b3c6","url":"img/files_user.svg"},{"revision":"0f7fe590b33417e32dab43b8ab53217f","url":"img/files-find.svg"},{"revision":"46ebb5de3b58274b036feb0a3c398fff","url":"img/logo.svg"},{"revision":"f9ae9010ba22aa336a105d4c3e7fcacb","url":"img/manifest/apple-icon-152.png"},{"revision":"c10c2d4a1335de0087d5516f2a942f80","url":"img/manifest/icon-192.png"},{"revision":"3fefbb0655da1640bf20334175723a8f","url":"img/manifest/icon-512.png"},{"revision":"e9c67970b9adcce9fed2ecafcff819d5","url":"img/manifest/tile-win.png"},{"revision":"724030a2c8c634645e1258d492ac02dc","url":"img/person.svg"},{"revision":"e3a597e3d769aa38d9b9872a4ef94ebd","url":"img/sunat-logo.png"}],n=new g;e.offlineMode&&n.addToCacheList(t),await async function(e){}(),self.addEventListener("install",(e=>{e.waitUntil(n.install())})),self.addEventListener("activate",(e=>{e.waitUntil(n.activate())})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const s=t.request.url,r=function(e){const t=[],n=new URL(e,self.location.href);return n.origin!==self.location.origin||(n.search="",n.hash="",t.push(n.href),n.pathname.endsWith("/")?t.push(`${n.href}index.html`):t.push(`${n.href}/index.html`)),t}(s);for(let a=0;a<r.length;a+=1){const c=r[a],o=n.getCacheKeyForURL(c);if(o){e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:s,possibleURL:c,possibleURLs:r,cacheKey:o}),t.respondWith(caches.match(o));break}}}})),self.addEventListener("message",(async e=>{"SKIP_WAITING"===(e.data&&e.data.type)&&self.skipWaiting()}))})()}]);